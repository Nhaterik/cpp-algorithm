

Bài làm tốt nhất
Cho mảng X[] gồm n phần tử và mảng Y[] gồm m phần tử. Hãy đếm số các cặp xy>yx, trong đó x€X[] và y€Y[]. Ví dụ X[] = {2, 1, 6 }, Y[] = {1, 5} ta có kết quả là 3 cặp (2, 1), (2, 5), (6, 1).

Input:

Dòng đầu tiên đưa vào số lượng bộ test T.
Những dòng kế tiếp đưa vào T bộ test. Mỗi bộ test gồm ba dòng: dòng đầu tiên đưa vào n, m tương ứng với số phần tử của mảng X[] và Y[]; dòng tiếp theo là n số X[i] của mảng X[]; dòng cuối cùng là m số của mảng Y[]; các số được viết cách nhau một vài khoảng trống.
T, n, m, X[i], Y[j] thỏa mãn ràng buộc: 1≤ T ≤100; 1≤ n, m ≤105; 1≤ X[i], Y[j] ≤103.
Output:

Đưa ra kết quả mỗi test theo từng dòng.
Input:



1
3 2
2 1 6
1 5
Output:
3
 ...........
#include <bits/stdc++.h>
using namespace std;
int totalCn(int x, int b[], int cn[], int m)
{

	if (x == 0)
		return 0;
	if (x == 1)
		return cn[0];
	else
	{
		int res = cn[1]+cn[0];
		int i = upper_bound(b, b + m, x) - b;
		res += m - i;
		if (x == 2)
			res -= (cn[3] + cn[4]);
		if (x == 3)
			res += cn[2];
		return res;
	}
}
int main()
{
	int t;
	cin >> t;
	while (t--)
	{
		int n, m, ans = 0;
		cin >> n >> m;
		int a[n], cn[5] = {0}, b[m];
		for (int i = 0; i < n; i++)
			cin >> a[i];
		for (int j = 0; j < m; j++)
		{
			cin >> b[j];
			if (b[j] < 5)
				cn[b[j]]++;
		}
		sort(b,b+m);
		for (int i = 0; i < n; i++)
		{
			ans += totalCn(a[i], b, cn, m);
		}
		cout << ans << endl;
	}
}

